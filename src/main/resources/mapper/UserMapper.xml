<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ed.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.ed.pojo.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_sno" property="userSno" jdbcType="VARCHAR" />
    <result column="user_password" property="userPassword" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_class" property="userClass" jdbcType="VARCHAR" />
    <result column="user_sex" property="userSex" jdbcType="VARCHAR" />
    <result column="user_age" property="userAge" jdbcType="INTEGER" />
    <result column="user_date" property="userDate" jdbcType="VARCHAR" />
    <result column="user_dep" property="userDep" jdbcType="VARCHAR" />
    <result column="user_card" property="userCard" jdbcType="VARCHAR" />
    <result column="user_image" property="userImage" jdbcType="VARCHAR" />
    <result column="user_nation" property="userNation" jdbcType="VARCHAR" />
    <result column="user_tel" property="userTel" jdbcType="VARCHAR" />
    <result column="user_semester" property="userSemester" jdbcType="VARCHAR" />
    <result column="user_college" property="userCollege" jdbcType="VARCHAR" />
    <collection property="books" ofType="com.ed.pojo.Book">
      <id column="book_id" jdbcType="INTEGER" property="bookId" />
      <result column="book_name" jdbcType="VARCHAR" property="bookName" />
      <result column="book_author" jdbcType="VARCHAR" property="bookAuthor" />
      <result column="book_publish" jdbcType="VARCHAR" property="bookPublish" />
      <result column="book_type" jdbcType="VARCHAR" property="bookType" />
      <result column="book_price" jdbcType="DOUBLE" property="bookPrice" />
    </collection>
    <collection property="achievements" ofType="com.ed.pojo.Achievement">
      <id column="achievement_id" property="achievementId" jdbcType="INTEGER" />
      <result column="achievement_course" property="achievementCourse" jdbcType="VARCHAR" />
      <result column="achievement_course_type" property="achievementCourseType" jdbcType="VARCHAR" />
      <result column="achievement_core" property="achievementCore" jdbcType="INTEGER" />
      <result column="achievement_course_credit" property="achievementCourseCredit" jdbcType="DOUBLE" />
      <result column="achievement_user_sno" property="achievementUserSno" jdbcType="INTEGER" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, user_sno, user_password, user_name, user_class, user_sex, user_age, user_date, 
    user_dep, user_card, user_image, user_nation, user_tel, user_semester, user_college
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
   <select id="queryPersonByPersonName" resultMap="BaseResultMap">
     select
     <include refid="Base_Column_List" />
     from user
     where user_sno = #{userSno}
   </select>


  <select id="selectRole" resultType="java.lang.String">
SELECT
role.role_name
FROM
`user`
INNER JOIN user_role ON `user`.user_id = user_role.user_id
INNER JOIN role ON user_role.role_id = role.role_id
where user_sno=#{userSno}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ed.pojo.User" >
    insert into user (user_id, user_sno, user_password, 
      user_name, user_class, user_sex, 
      user_age, user_date, user_dep, 
      user_card, user_image, user_nation, 
      user_tel, user_semester, user_college
      )
    values (#{userId,jdbcType=INTEGER}, #{userSno,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{userClass,jdbcType=VARCHAR}, #{userSex,jdbcType=VARCHAR}, 
      #{userAge,jdbcType=INTEGER}, #{userDate,jdbcType=VARCHAR}, #{userDep,jdbcType=VARCHAR}, 
      #{userCard,jdbcType=VARCHAR}, #{userImage,jdbcType=VARCHAR}, #{userNation,jdbcType=VARCHAR}, 
      #{userTel,jdbcType=VARCHAR}, #{userSemester,jdbcType=VARCHAR}, #{userCollege,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ed.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userSno != null" >
        user_sno,
      </if>
      <if test="userPassword != null" >
        user_password,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userClass != null" >
        user_class,
      </if>
      <if test="userSex != null" >
        user_sex,
      </if>
      <if test="userAge != null" >
        user_age,
      </if>
      <if test="userDate != null" >
        user_date,
      </if>
      <if test="userDep != null" >
        user_dep,
      </if>
      <if test="userCard != null" >
        user_card,
      </if>
      <if test="userImage != null" >
        user_image,
      </if>
      <if test="userNation != null" >
        user_nation,
      </if>
      <if test="userTel != null" >
        user_tel,
      </if>
      <if test="userSemester != null" >
        user_semester,
      </if>
      <if test="userCollege != null" >
        user_college,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userSno != null" >
        #{userSno,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userClass != null" >
        #{userClass,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null" >
        #{userSex,jdbcType=VARCHAR},
      </if>
      <if test="userAge != null" >
        #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userDate != null" >
        #{userDate,jdbcType=VARCHAR},
      </if>
      <if test="userDep != null" >
        #{userDep,jdbcType=VARCHAR},
      </if>
      <if test="userCard != null" >
        #{userCard,jdbcType=VARCHAR},
      </if>
      <if test="userImage != null" >
        #{userImage,jdbcType=VARCHAR},
      </if>
      <if test="userNation != null" >
        #{userNation,jdbcType=VARCHAR},
      </if>
      <if test="userTel != null" >
        #{userTel,jdbcType=VARCHAR},
      </if>
      <if test="userSemester != null" >
        #{userSemester,jdbcType=VARCHAR},
      </if>
      <if test="userCollege != null" >
        #{userCollege,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ed.pojo.User" >
    update user
    <set >
      <if test="userSno != null" >
        user_sno = #{userSno,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userClass != null" >
        user_class = #{userClass,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null" >
        user_sex = #{userSex,jdbcType=VARCHAR},
      </if>
      <if test="userAge != null" >
        user_age = #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userDate != null" >
        user_date = #{userDate,jdbcType=VARCHAR},
      </if>
      <if test="userDep != null" >
        user_dep = #{userDep,jdbcType=VARCHAR},
      </if>
      <if test="userCard != null" >
        user_card = #{userCard,jdbcType=VARCHAR},
      </if>
      <if test="userImage != null" >
        user_image = #{userImage,jdbcType=VARCHAR},
      </if>
      <if test="userNation != null" >
        user_nation = #{userNation,jdbcType=VARCHAR},
      </if>
      <if test="userTel != null" >
        user_tel = #{userTel,jdbcType=VARCHAR},
      </if>
      <if test="userSemester != null" >
        user_semester = #{userSemester,jdbcType=VARCHAR},
      </if>
      <if test="userCollege != null" >
        user_college = #{userCollege,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ed.pojo.User" >
    update user
    set user_sno = #{userSno,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_class = #{userClass,jdbcType=VARCHAR},
      user_sex = #{userSex,jdbcType=VARCHAR},
      user_age = #{userAge,jdbcType=INTEGER},
      user_date = #{userDate,jdbcType=VARCHAR},
      user_dep = #{userDep,jdbcType=VARCHAR},
      user_card = #{userCard,jdbcType=VARCHAR},
      user_image = #{userImage,jdbcType=VARCHAR},
      user_nation = #{userNation,jdbcType=VARCHAR},
      user_tel = #{userTel,jdbcType=VARCHAR},
      user_semester = #{userSemester,jdbcType=VARCHAR},
      user_college = #{userCollege,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <select id="selectstudentmakeup" resultMap="BaseResultMap" parameterType="java.lang.String" >
      SELECT
    achievement.achievement_user_sno,
    achievement.achievement_course_credit,
    achievement.achievement_core,
    achievement.achievement_course_type,
    achievement.achievement_course,
    achievement.achievement_id
    FROM
    `user`
    INNER JOIN achievement ON `user`.user_sno = achievement.achievement_user_sno
    WHERE `user`.user_sno=achievement.achievement_user_sno
    AND `user`.user_sno=#{userSno,jdbcType=VARCHAR} AND achievement.achievement_core &lt; 60
  </select>

  <select id="userbook" resultMap="BaseResultMap" parameterType="java.lang.String" >
SELECT `user`.user_sno,`user`.user_name,book.book_id,book.book_name,book.book_author,book.book_price,book.book_type,book.book_publish
FROM `user` INNER JOIN user_book ON `user`.user_sno=user_book.user_sno INNER JOIN  book ON book.book_id=user_book.book_id WHERE `user`.user_sno=#{userSno,jdbcType=VARCHAR}
  </select>
</mapper>